import Head from 'next/head'
import Link from 'next/link'
import Tab from '../components/Tab'
import Banner from '../components/Banner'
import Hero from '../components/Hero'
import slugify from 'slugify'
import FlipMove from 'react-flip-move'
import Genre from '../components/Genre'

export default function Home(props) {
  return (
    <div>
      <Head>
        <title>LUX | online movies rating</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="mx-3 xl:container xl:mx-auto xl:px-3 pt-4 pb-4">
        <Banner results={props.trendingWeek.results} />
        <FlipMove className="flex space-x-4 md:space-x-7 whitespace-nowrap overflow-x-scroll scrollbar-hide my-2">
          {props.genres.genres.map((genre, key) => {
            return (
              <Genre genre={genre} key={key} {...genre} />
            )
          })}
        </FlipMove>
        <Tab title="Trending this day" type={[
          {title: 'All', name: 'all', type: 'day'},
          {title: 'Movies', name: 'movie', type: 'day'},
          {title: 'TV show', name: 'tv', type: 'day'}
        ]} dataset={props.trending} isTrending={true} languages={props.languages} />
        <Hero result={props.trending.results[10]} title="Latest Movie" />
        <Tab title="What's Popular" type={[
          {title: 'Movies', name: 'movie', type: 'popular'},
          {title: 'TV show', name: 'tv', type: 'popular'}
        ]} dataset={props.popularMovies} languages={props.languages} />
        <div className="grid md:grid-cols-2 grid-cols-1 gap-4">
          <Hero result={props.popularMovies.results[9]} media_type="movie" title="Latest Movie" md={48} lg={64} />
          <Hero result={props.popularMovies.results[11]} media_type="movie" title="Latest Movie" md={48} lg={64} isHidden={true} />
        </div>
        <Tab title="Now Playing" type={[
          {title: 'Movies', name: 'movie', type: 'now_playing'},
          {title: 'TV show', name: 'tv', type: 'airing_today'}
        ]} dataset={props.nowPlaying} languages={props.languages} />
        <div className="grid md:grid-cols-3 grid-cols-1 gap-4">
          <Hero result={props.nowPlaying.results[9]} media_type="movie" title="Latest Movie" md={32} lg={44} isHidden={true} />
          <Hero result={props.nowPlaying.results[10]} media_type="movie" title="Latest Movie" md={32} lg={44} isHidden={true} />
          <Hero result={props.nowPlaying.results[11]} media_type="movie" title="Latest Movie" md={32} lg={44} />
        </div>
        <Tab title="Top Ratings" type={[
          {title: 'Movies', name: 'movie', type: 'top_rated'},
          {title: 'TV show', name: 'tv', type: 'top_rated'}
        ]} dataset={props.topRated} languages={props.languages} />
        <Hero result={props.topRated.results[9]} media_type="movie" title="Latest Movie" />
        <Tab title="Upcoming & On Air" type={[
          {title: 'Movies', name: 'movie', type: 'upcoming'},
          {title: 'TV show', name: 'tv', type: 'on_the_air'}
        ]} dataset={props.upcomingMovies} languages={props.languages} />
      </div>
    </div>
  )
  // }
}

export async function getServerSideProps() {
  const tr = await fetch(`https://api.themoviedb.org/3/movie/top_rated?api_key=${process.env.API_KEY}`)
  const topRated = await tr.json()

  const np = await fetch(`https://api.themoviedb.org/3/movie/now_playing?api_key=${process.env.API_KEY}`)
  const nowPlaying = await np.json()

  const pm = await fetch(`https://api.themoviedb.org/3/movie/popular?api_key=${process.env.API_KEY}`)
  const popularMovies = await pm.json()

  const upcoming = await fetch(`https://api.themoviedb.org/3/movie/upcoming?api_key=${process.env.API_KEY}`)
  const upcomingMovies = await upcoming.json()

  const getTrendingDays = await fetch(`https://api.themoviedb.org/3/trending/all/day?api_key=${process.env.API_KEY}`)
  const trendingDays = await getTrendingDays.json()

  const getTrendingWeek = await fetch(`https://api.themoviedb.org/3/trending/all/week?api_key=${process.env.API_KEY}`)
  const trendingWeek = await getTrendingWeek.json()

  const reqLang = await fetch(`https://api.themoviedb.org/3/configuration/languages?api_key=${process.env.API_KEY}`)
  const languages = await reqLang.json()

  const genreMovie = await fetch(`https://api.themoviedb.org/3/genre/movie/list?api_key=${process.env.API_KEY}`)
  const genres = await genreMovie.json()

  return {
    props: {
      topRated: topRated,
      nowPlaying: nowPlaying,
      popularMovies: popularMovies,
      upcomingMovies: upcomingMovies,
      trending: trendingDays,
      trendingWeek: trendingWeek,
      languages: languages,
      genres: genres
    },
  }
}
